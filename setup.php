<?php
// setup.php - Run once to create the database, tables, and config file.
// --- CONFIGURATION ---
error_reporting(E_ALL);
ini_set('display_errors', 1);

session_start();

$steps = ['start', 'database', 'config', 'finish'];
$current_step = 'start';

if (isset($_GET['step']) && in_array($_GET['step'], $steps)) {
    $current_step = $_GET['step'];
}

$error_message = null;
$success_message = null;
$config_content_to_show = null;

// --- LOGIC ---

// Handle form submission for database setup
if ($current_step === 'database' && $_SERVER['REQUEST_METHOD'] === 'POST') {
    $db_host = $_POST['db_host'] ?? 'localhost';
    $db_user = $_POST['db_user'] ?? 'root';
    $db_pass = $_POST['db_pass'] ?? '';
    $db_name = $_POST['db_name'] ?? 'sms_db';

    // Store in session to carry over
    $_SESSION['db_host'] = $db_host;
    $_SESSION['db_user'] = $db_user;
    $_SESSION['db_pass'] = $db_pass;
    $_SESSION['db_name'] = $db_name;

    try {
        // 1. Connect and Create Database
        $pdo = new PDO("mysql:host=$db_host", $db_user, $db_pass, [PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION]);
        $pdo->exec("CREATE DATABASE IF NOT EXISTS `$db_name` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci");
        $pdo->exec("USE `$db_name`");

        // 2. Read and Execute Schema SQL
        $sql_file = __DIR__ . '/sql/schema.sql';
        if (!file_exists($sql_file)) {
            throw new Exception("Database schema file not found at 'sql/schema.sql'. Please ensure the file exists.");
        }
        $sql_commands = file_get_contents($sql_file);
        $pdo->exec($sql_commands);

        // 3. Create initial Super Admin user
        $username = 'admin';
        $password = password_hash('Admin@123', PASSWORD_DEFAULT);
        $stmt = $pdo->prepare('INSERT INTO users (username, password, role, fullname, email) VALUES (?, ?, ?, ?, ?)');
        $stmt->execute([$username, $password, 'superadmin', 'School Administrator', 'admin@example.com']);

        $_SESSION['db_setup_complete'] = true;
        header('Location: setup.php?step=config');
        exit;

    } catch (PDOException | Exception $e) {
        $error_message = "Database Error: " . $e->getMessage();
    }
}

// Handle config file generation
if ($current_step === 'config') {
    if (!isset($_SESSION['db_setup_complete']) || !$_SESSION['db_setup_complete']) {
        header('Location: setup.php?step=database');
        exit;
    }

    $db_host = $_SESSION['db_host'];
    $db_user = $_SESSION['db_user'];
    $db_name = $_SESSION['db_name'];
    $db_pass = $_SESSION['db_pass'];

    // Calculate base_url dynamically
    $protocol = (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off') ? 'https' : 'http';
    $host = $_SERVER['HTTP_HOST'];
    $script_path = dirname($_SERVER['REQUEST_URI']);
    // Normalize path to remove trailing slashes and go up one level from the root script
    $base_path = rtrim($script_path, '/\\');
    $base_url = "{$protocol}://{$host}{$base_path}/public";

    $config_content = <<<PHP
<?php
// config.php - Database and application configuration
// AUTO-GENERATED BY setup.php - DO NOT EDIT MANUALLY

return [
    'db_host' => '{$db_host}',
    'db_name' => '{$db_name}',
    'db_user' => '{$db_user}',
    'db_pass' => '{$db_pass}',
    'base_url' => '{$base_url}'
];
PHP;

    $config_dir = __DIR__ . '/config';
    $config_path = $config_dir . '/config.php';

    if (!is_dir($config_dir)) {
        if (!@mkdir($config_dir, 0755, true)) {
            $error_message = "Error: Could not create the 'config' directory. Please create it manually with write permissions.";
            $config_content_to_show = htmlspecialchars($config_content);
            $current_step = 'finish'; // Move to finish step to show manual instructions
        }
    }

    if (!$error_message) {
        $written = @file_put_contents($config_path, $config_content);
        if ($written === false) {
            $error_message = "Configuration file could not be written due to permissions. Please create the file 'config/config.php' manually with the content below.";
            $config_content_to_show = htmlspecialchars($config_content);
        } else {
            $success_message = "Success! The configuration file has been created.";
        }
    }

    session_destroy();
    $current_step = 'finish';
}

?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>School Management System - Setup</title>
    <style>
        body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif; line-height: 1.6; color: #333; background-color: #f4f7f9; margin: 0; padding: 20px; }
        .container { max-width: 700px; margin: 40px auto; background: #fff; padding: 30px; border-radius: 8px; box-shadow: 0 4px 10px rgba(0,0,0,0.05); }
        h1, h2 { color: #2c3e50; text-align: center; }
        .alert { padding: 15px; margin-bottom: 20px; border-radius: 5px; }
        .alert-danger { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
        .alert-success { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
        .alert-warning { background-color: #fff3cd; color: #856404; border: 1px solid #ffeeba;}
        .form-group { margin-bottom: 15px; }
        label { display: block; font-weight: bold; margin-bottom: 5px; }
        input[type="text"], input[type="password"] { width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 4px; box-sizing: border-box; }
        .btn { display: inline-block; background-color: #3498db; color: #fff; padding: 12px 25px; border-radius: 5px; text-decoration: none; text-align: center; font-size: 16px; border: none; cursor: pointer; transition: background-color 0.3s; width: 100%; }
        .btn:hover { background-color: #2980b9; }
        .text-center { text-align: center; }
        pre { background-color: #eee; padding: 15px; border-radius: 4px; white-space: pre-wrap; word-wrap: break-word; }
        .steps { text-align: center; margin-bottom: 30px; padding-bottom: 15px; border-bottom: 1px solid #eee; }
        .step { display: inline-block; margin: 0 15px; color: #ccc; font-weight: bold; }
        .step.active { color: #3498db; }
        .step.done { color: #2ecc71; }
    </style>
</head>
<body>
    <div class="container">
        <h1>School Management System Setup</h1>

        <div class="steps">
            <span class="step <?php echo ($current_step === 'start' || $current_step === 'database' || $current_step === 'config' || $current_step === 'finish') ? 'active' : ''; ?>">Welcome</span>
            &rarr;
            <span class="step <?php echo ($current_step === 'database' || $current_step === 'config' || $current_step === 'finish') ? 'active' : ''; ?>">Database</span>
            &rarr;
            <span class="step <?php echo ($current_step === 'finish') ? 'active' : ''; ?>">Finish</span>
        </div>

        <?php if ($error_message): ?>
            <div class="alert alert-danger"><?php echo $error_message; ?></div>
        <?php endif; ?>

        <?php if ($current_step === 'start'): ?>
            <h2>Welcome!</h2>
            <p>This wizard will guide you through the installation of the School Management System. It will help you set up the database and create the necessary configuration file.</p>
            <p class="text-center">
                <a href="setup.php?step=database" class="btn">Start Setup</a>
            </p>
        <?php endif; ?>

        <?php if ($current_step === 'database'): ?>
            <h2>Database Configuration</h2>
            <p>Please provide your MySQL database credentials. The installer will attempt to create the database and tables for you.</p>
            <form action="setup.php?step=database" method="POST">
                <div class="form-group">
                    <label for="db_host">Database Host</label>
                    <input type="text" id="db_host" name="db_host" value="localhost" required>
                </div>
                <div class="form-group">
                    <label for="db_name">Database Name</label>
                    <input type="text" id="db_name" name="db_name" value="sms_db" required>
                </div>
                <div class="form-group">
                    <label for="db_user">Database Username</label>
                    <input type="text" id="db_user" name="db_user" value="root" required>
                </div>
                <div class="form-group">
                    <label for="db_pass">Database Password</label>
                    <input type="password" id="db_pass" name="db_pass">
                </div>
                <button type="submit" class="btn">Create Database & Tables</button>
            </form>
        <?php endif; ?>

        <?php if ($current_step === 'finish'): ?>
            <h2>Installation Complete</h2>

            <?php if ($success_message): ?>
                <div class="alert alert-success"><?php echo $success_message; ?></div>
            <?php endif; ?>

            <?php if ($config_content_to_show): ?>
                <div class="alert alert-warning">
                    <strong>Action Required:</strong> Could not write to <code>config/config.php</code>. Please create this file manually with the following content:
                </div>
                <pre><?php echo $config_content_to_show; ?></pre>
            <?php endif; ?>

            <div class="alert alert-danger text-center">
                <strong>IMPORTANT:</strong> For security reasons, please delete the <strong>setup.php</strong> file from your server immediately.
            </div>

            <p class="text-center">
                <a href="public/" class="btn">Go to Your Application</a>
            </p>
        <?php endif; ?>

    </div>
</body>
</html>